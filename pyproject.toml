[build-system]
requires = ["setuptools", "wheel", "cython"]
build-backend = "setuptools.build_meta"

[project]
name = "psd-tools"
dynamic = ["version"]
authors = [
    { name = "Mikhail Korobov", email = "kmike84@gmail.com" },
    { name = "Kota Yamaguchi", email = "KotaYamaguchi1984@gmail.com" },
]
description = "Python package for working with Adobe Photoshop PSD files"
readme = "README.rst"
keywords = ["photoshop", "psd"]
license = "MIT"
dependencies = [
    "typing-extensions;python_version<'3.11'",
    "docopt>=0.6.0",
    "attrs>=23.0.0",
    "Pillow>=10.3.0",
    "aggdraw",
    "numpy",
    "scipy",
    "scikit-image",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Graphics :: Viewers",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9"

[dependency-groups]
dev = ["pytest", "pytest-cov", "ipython", "ruff", "types-docopt"]
docs = ["sphinx", "sphinx_rtd_theme"]

[project.scripts]
psd-tools = "psd_tools.__main__:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
psd_tools = ["*.pyx"]

[tool.setuptools.dynamic]
version = { attr = "psd_tools.version.__version__" }

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cov=psd_tools"

[tool.cibuildwheel]
archs = "auto64"
skip = "cp3{9,10}-win_arm64 cp314t-*"
test-skip = "cp39-musllinux_aarch64 *-win_arm64"  # SciPy does not provide wheels for these platforms
test-requires = ["pytest", "pytest-cov", "ipython"]
test-command = "pytest {project}/tests"

[[tool.cibuildwheel.overrides]]
select = "cp3{13,14}-{manylinux,musllinux,macos}*"
before-build = "bash tools/configure_abi3.sh"

[tool.cibuildwheel.windows]
repair-wheel-command = ["pipx run delvewheel repair -v -w {dest_dir} {wheel}"]

[[tool.cibuildwheel.overrides]]
select = "cp3{13,14}-{manylinux,musllinux,macos}*"
inherit.repair-wheel-command = "append"
repair-wheel-command = "pipx run abi3audit --strict --report {wheel}"
